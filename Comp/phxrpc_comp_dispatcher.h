/* phxrpc_comp_dispatcher.h

 Generated by phxrpc_pb2service from comp.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "phxrpc/http.h"
#include "phxrpc/rpc.h"


class CompService;

class CompDispatcher {
  public:
    static const phxrpc::BaseDispatcher<CompDispatcher>::MqttFuncMap &GetMqttFuncMap();
    static const phxrpc::BaseDispatcher<CompDispatcher>::URIFuncMap &GetURIFuncMap();

    CompDispatcher(CompService &service, phxrpc::DispatcherArgs_t *dispatcher_args);

    virtual ~CompDispatcher();

    int PhxMqttConnect(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPublish(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttDisconnect(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxEcho(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
	int Handle(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
	int Handle_Post(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);

  private:
    CompService &service_;
    phxrpc::DispatcherArgs_t *dispatcher_args_;

};

