/* comp_client.h

 Generated by phxrpc_pb2client from comp.proto

*/

#pragma once

#include "comp.pb.h"
#include "phxrpc/rpc.h"
#include "phxrpc/network.h"


class CompClientUThread {
  public:
    static bool Init(const char *config_file);

    static const char *GetPackageName();

    CompClientUThread(phxrpc::UThreadEpollScheduler *uthread_scheduler);
    virtual ~CompClientUThread();

    int PhxMqttConnect(const phxrpc::MqttConnectPb &req, phxrpc::MqttConnackPb *resp);
    int PhxMqttPublish(const phxrpc::MqttPublishPb &req, phxrpc::MqttPubackPb *resp);
    int PhxMqttDisconnect(const phxrpc::MqttDisconnectPb &req);
    int PhxEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp);
    int PhxBatchEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp);
    int Handle(const magna::AppRequest &req, magna::AppResponse *resp);
	int Handle(const phxrpc::Endpoint_t &ep, const magna::AppRequest &req, magna::AppResponse *resp);

  private:
    phxrpc::UThreadEpollScheduler *uthread_scheduler_;
};

